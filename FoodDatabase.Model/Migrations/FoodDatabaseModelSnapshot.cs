// <auto-generated />
using System;
using FoodDatabase.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodDatabase.Model.Migrations
{
    [DbContext(typeof(FoodDatabase))]
    partial class FoodDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodDatabase.Model.Allergies", b =>
                {
                    b.Property<int>("AllergiesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllergyName");

                    b.HasKey("AllergiesId");

                    b.ToTable("Allerigies");
                });

            modelBuilder.Entity("FoodDatabase.Model.BreakfastMeals", b =>
                {
                    b.Property<int>("BreakfastMealsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BreakfastMealName");

                    b.Property<int>("MealCategoriesId");

                    b.Property<int>("UtilityId");

                    b.HasKey("BreakfastMealsId");

                    b.HasIndex("MealCategoriesId");

                    b.HasIndex("UtilityId");

                    b.ToTable("BreakfastMeals");
                });

            modelBuilder.Entity("FoodDatabase.Model.Calander", b =>
                {
                    b.Property<int>("CalanderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CalanderId");

                    b.ToTable("Calender");
                });

            modelBuilder.Entity("FoodDatabase.Model.DinnerMeals", b =>
                {
                    b.Property<int>("DinnerMealsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DinnerMealName");

                    b.Property<int>("MealCategoriesId");

                    b.Property<int>("UtilityId");

                    b.HasKey("DinnerMealsId");

                    b.HasIndex("MealCategoriesId");

                    b.HasIndex("UtilityId");

                    b.ToTable("DinnerMeals");
                });

            modelBuilder.Entity("FoodDatabase.Model.FamilyData", b =>
                {
                    b.Property<int>("FamilyDataId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FamilyMeals");

                    b.Property<string>("FamilyName");

                    b.HasKey("FamilyDataId");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("FoodDatabase.Model.FoodDetails", b =>
                {
                    b.Property<int>("FoodDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllergiesId");

                    b.Property<int>("AllergyID");

                    b.Property<bool>("DryStorage");

                    b.Property<string>("FoodName");

                    b.HasKey("FoodDetailsId");

                    b.HasIndex("AllergiesId");

                    b.ToTable("FoodDetails");
                });

            modelBuilder.Entity("FoodDatabase.Model.LunchMeals", b =>
                {
                    b.Property<int>("LunchMealsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LunchMealName");

                    b.Property<int>("MealCategoriesId");

                    b.Property<int>("UtilityId");

                    b.HasKey("LunchMealsId");

                    b.HasIndex("MealCategoriesId");

                    b.HasIndex("UtilityId");

                    b.ToTable("LunchMeals");
                });

            modelBuilder.Entity("FoodDatabase.Model.MealCategories", b =>
                {
                    b.Property<int>("MealCategoriesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MealCategory");

                    b.Property<string>("MealName");

                    b.Property<int?>("RecipeDetailsId");

                    b.Property<int>("RecipeId");

                    b.HasKey("MealCategoriesId");

                    b.HasIndex("RecipeDetailsId");

                    b.ToTable("MealCategories");
                });

            modelBuilder.Entity("FoodDatabase.Model.RecipeDetails", b =>
                {
                    b.Property<int>("RecipeDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodDetailsId");

                    b.Property<int>("FoodId");

                    b.Property<string>("RecipeName");

                    b.Property<string>("RecipeURL");

                    b.HasKey("RecipeDetailsId");

                    b.HasIndex("FoodDetailsId");

                    b.ToTable("RecipeDetails");
                });

            modelBuilder.Entity("FoodDatabase.Model.Utility", b =>
                {
                    b.Property<int>("UtilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UtilityId");

                    b.ToTable("Utilities");
                });

            modelBuilder.Entity("FoodDatabase.Model.BreakfastMeals", b =>
                {
                    b.HasOne("FoodDatabase.Model.MealCategories", "Meal")
                        .WithMany()
                        .HasForeignKey("MealCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodDatabase.Model.Utility", "Utilities")
                        .WithMany()
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodDatabase.Model.DinnerMeals", b =>
                {
                    b.HasOne("FoodDatabase.Model.MealCategories", "Meal")
                        .WithMany()
                        .HasForeignKey("MealCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodDatabase.Model.Utility", "Utilities")
                        .WithMany()
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodDatabase.Model.FoodDetails", b =>
                {
                    b.HasOne("FoodDatabase.Model.Allergies", "Allergies")
                        .WithMany()
                        .HasForeignKey("AllergiesId");
                });

            modelBuilder.Entity("FoodDatabase.Model.LunchMeals", b =>
                {
                    b.HasOne("FoodDatabase.Model.MealCategories", "Meal")
                        .WithMany()
                        .HasForeignKey("MealCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodDatabase.Model.Utility", "Utilities")
                        .WithMany()
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodDatabase.Model.MealCategories", b =>
                {
                    b.HasOne("FoodDatabase.Model.RecipeDetails", "RecipeDetails")
                        .WithMany()
                        .HasForeignKey("RecipeDetailsId");
                });

            modelBuilder.Entity("FoodDatabase.Model.RecipeDetails", b =>
                {
                    b.HasOne("FoodDatabase.Model.FoodDetails", "FoodDetails")
                        .WithMany()
                        .HasForeignKey("FoodDetailsId");
                });
#pragma warning restore 612, 618
        }
    }
}
